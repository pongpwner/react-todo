{"ast":null,"code":"var _jsxFileName = \"D:\\\\Libraries\\\\Documents\\\\CodeProjects\\\\react-todo\\\\my-app\\\\src\\\\components\\\\Defaults.js\";\nimport React, { useState } from \"react\";\nimport { default1 } from \"./defaultTasks/Default1\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Defaults({\n  tasks,\n  setTasks,\n  today,\n  setToday\n}) {\n  function handleDefault(e) {\n    setDate();\n\n    if (e.target.value === \"1\") {\n      setDefault1();\n    }\n  } //not sure if i need this set date method.  but i want it to recheck the date everytime\n  //i click a efault because it would be a new day if i did not close the app\n  //its most likely that i dont need to set date here beacuse it does not overwrite the date from Today.js\n\n\n  function setDate() {\n    let currentDate = new Date();\n    let y = currentDate.getFullYear();\n    let m = currentDate.getMonth();\n    let d = currentDate.getDate();\n    setToday(`${m}/${d}/${y}`);\n  }\n\n  function setDefault1() {\n    setTasks(default1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"defaultsContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"default1Button\",\n      value: \"1\",\n      onClick: e => handleDefault(e),\n      children: \"Default 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_c = Defaults;\n\nvar _c;\n\n$RefreshReg$(_c, \"Defaults\");","map":{"version":3,"sources":["D:/Libraries/Documents/CodeProjects/react-todo/my-app/src/components/Defaults.js"],"names":["React","useState","default1","Defaults","tasks","setTasks","today","setToday","handleDefault","e","setDate","target","value","setDefault1","currentDate","Date","y","getFullYear","m","getMonth","d","getDate"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,yBAAzB;;AAEA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,KAAnB;AAA0BC,EAAAA;AAA1B,CAAlB,EAAwD;AACrE,WAASC,aAAT,CAAuBC,CAAvB,EAA0B;AACxBC,IAAAA,OAAO;;AACP,QAAID,CAAC,CAACE,MAAF,CAASC,KAAT,KAAmB,GAAvB,EAA4B;AAC1BC,MAAAA,WAAW;AACZ;AACF,GANoE,CAOrE;AACA;AACA;;;AACA,WAASH,OAAT,GAAmB;AACjB,QAAII,WAAW,GAAG,IAAIC,IAAJ,EAAlB;AACA,QAAIC,CAAC,GAAGF,WAAW,CAACG,WAAZ,EAAR;AACA,QAAIC,CAAC,GAAGJ,WAAW,CAACK,QAAZ,EAAR;AACA,QAAIC,CAAC,GAAGN,WAAW,CAACO,OAAZ,EAAR;AACAd,IAAAA,QAAQ,CAAE,GAAEW,CAAE,IAAGE,CAAE,IAAGJ,CAAE,EAAhB,CAAR;AACD;;AAED,WAASH,WAAT,GAAuB;AACrBR,IAAAA,QAAQ,CAACH,QAAD,CAAR;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,2BACE;AACE,MAAA,SAAS,EAAC,gBADZ;AAEE,MAAA,KAAK,EAAC,GAFR;AAGE,MAAA,OAAO,EAAGO,CAAD,IAAOD,aAAa,CAACC,CAAD,CAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;KAhCuBN,Q","sourcesContent":["import React, { useState } from \"react\";\r\nimport { default1 } from \"./defaultTasks/Default1\";\r\n\r\nexport default function Defaults({ tasks, setTasks, today, setToday }) {\r\n  function handleDefault(e) {\r\n    setDate();\r\n    if (e.target.value === \"1\") {\r\n      setDefault1();\r\n    }\r\n  }\r\n  //not sure if i need this set date method.  but i want it to recheck the date everytime\r\n  //i click a efault because it would be a new day if i did not close the app\r\n  //its most likely that i dont need to set date here beacuse it does not overwrite the date from Today.js\r\n  function setDate() {\r\n    let currentDate = new Date();\r\n    let y = currentDate.getFullYear();\r\n    let m = currentDate.getMonth();\r\n    let d = currentDate.getDate();\r\n    setToday(`${m}/${d}/${y}`);\r\n  }\r\n\r\n  function setDefault1() {\r\n    setTasks(default1);\r\n  }\r\n  return (\r\n    <div className=\"defaultsContainer\">\r\n      <button\r\n        className=\"default1Button\"\r\n        value=\"1\"\r\n        onClick={(e) => handleDefault(e)}\r\n      >\r\n        Default 1\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}