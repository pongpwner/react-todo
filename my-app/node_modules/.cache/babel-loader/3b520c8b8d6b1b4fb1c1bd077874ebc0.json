{"ast":null,"code":"var _jsxFileName = \"D:\\\\Libraries\\\\Documents\\\\CodeProjects\\\\react-todo\\\\my-app\\\\src\\\\components\\\\Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Weather({\n  tasks\n}) {\n  _s();\n\n  //use state to get input from form\n  const [city, setCity] = useState(\"\");\n  const [temp, setTemp] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [loc, setLoc] = useState(\"Salisbury, us\");\n  const [display, setDisplay] = useState(\"Salisbury\");\n  const api = {\n    key: \"26ce245088c3cd75b76abae32afa318b\",\n    base: \"https://api.openweathermap.org/data/2.5/\"\n  };\n  getWeather();\n\n  function getWeather() {\n    console.log(\"aaa\");\n    fetch(`${api.base}weather?q=${loc}&appid=${api.key}`).then(response => response.json()).then(data => {\n      console.log(data);\n      setCity(data[\"name\"]);\n      setTemp(Math.round((data[\"main\"][\"temp\"] - 273.15) * (9 / 5) + 32));\n      setDesc(data[\"weather\"][0][\"description\"]);\n      setDisplay(data.name);\n    }).catch(err => console.log(\"wrong city name\"));\n    setTimeout(getWeather(), 30000);\n  } //, [api.base, loc, api.key, tasks]\n\n\n  function displayWeather() {\n    //console.log(city.city);\n    setLoc(city); // fetch(`${api.base}weather?q=${city}&appid=${api.key}`)\n    //   .then((response) => response.json())\n    //   .then((data) => {\n    //     setCity(data[\"name\"]);\n    //     setTemp((data[\"main\"][\"temp\"] - 273.15) * (9 / 5) + 32);\n    //     setDesc(data[\"weather\"][0][\"description\"]);\n    //   })\n    //   .catch((err) => console.log(\"wrong city name\"));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weatherContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weatherInputContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"weatherTitle\",\n        children: \"Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"enter a city\",\n        className: \"inputValue\",\n        value: city,\n        onChange: e => setCity(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"submit\",\n        onClick: displayWeather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weatherDisplayContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location\",\n        children: display\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"temperature\",\n        children: [temp, \" F\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weatherDescription\",\n        children: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Weather, \"srfXnstV2LgrqwccZSi9iQ0t6Lw=\");\n\n_c = Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["D:/Libraries/Documents/CodeProjects/react-todo/my-app/src/components/Weather.js"],"names":["React","useState","useEffect","Weather","tasks","city","setCity","temp","setTemp","desc","setDesc","loc","setLoc","display","setDisplay","api","key","base","getWeather","console","log","fetch","then","response","json","data","Math","round","name","catch","err","setTimeout","displayWeather","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nexport default function Weather({ tasks }) {\r\n  //use state to get input from form\r\n  const [city, setCity] = useState(\"\");\r\n  const [temp, setTemp] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\");\r\n  const [loc, setLoc] = useState(\"Salisbury, us\");\r\n  const [display, setDisplay] = useState(\"Salisbury\");\r\n  const api = {\r\n    key: \"26ce245088c3cd75b76abae32afa318b\",\r\n    base: \"https://api.openweathermap.org/data/2.5/\",\r\n  };\r\n  getWeather();\r\n\r\n  function getWeather() {\r\n    console.log(\"aaa\");\r\n    fetch(`${api.base}weather?q=${loc}&appid=${api.key}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setCity(data[\"name\"]);\r\n        setTemp(Math.round((data[\"main\"][\"temp\"] - 273.15) * (9 / 5) + 32));\r\n        setDesc(data[\"weather\"][0][\"description\"]);\r\n        setDisplay(data.name);\r\n      })\r\n      .catch((err) => console.log(\"wrong city name\"));\r\n    setTimeout(getWeather(), 30000);\r\n  }\r\n  //, [api.base, loc, api.key, tasks]\r\n\r\n  function displayWeather() {\r\n    //console.log(city.city);\r\n    setLoc(city);\r\n    // fetch(`${api.base}weather?q=${city}&appid=${api.key}`)\r\n    //   .then((response) => response.json())\r\n    //   .then((data) => {\r\n    //     setCity(data[\"name\"]);\r\n    //     setTemp((data[\"main\"][\"temp\"] - 273.15) * (9 / 5) + 32);\r\n    //     setDesc(data[\"weather\"][0][\"description\"]);\r\n    //   })\r\n    //   .catch((err) => console.log(\"wrong city name\"));\r\n  }\r\n\r\n  return (\r\n    <div className=\"weatherContainer\">\r\n      <div className=\"weatherInputContainer\">\r\n        <h1 className=\"weatherTitle\">Weather</h1>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"enter a city\"\r\n          className=\"inputValue\"\r\n          value={city}\r\n          onChange={(e) => setCity(e.target.value)}\r\n        ></input>\r\n        <input type=\"submit\" value=\"submit\" onClick={displayWeather}></input>\r\n      </div>\r\n      <div className=\"weatherDisplayContainer\">\r\n        <div className=\"location\">{display}</div>\r\n        <div className=\"temperature\">{temp} F</div>\r\n        <div className=\"weatherDescription\">{desc}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}