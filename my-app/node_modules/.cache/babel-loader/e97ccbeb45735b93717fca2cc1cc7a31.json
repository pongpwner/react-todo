{"ast":null,"code":"var _jsxFileName = \"D:\\\\Libraries\\\\Documents\\\\CodeProjects\\\\react-todo\\\\my-app\\\\src\\\\components\\\\NewListModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport TaskList from \"./TaskList.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewListModal({\n  lists,\n  setLists,\n  listName,\n  setListName,\n  modalState,\n  setModalState\n}) {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const [task, setTask] = useState(\"\"); //task name\n\n  const [priority, setPriority] = useState(\"normal\");\n\n  function addTask() {\n    setTasks([...tasks, {\n      name: task,\n      id: Math.random(),\n      priority: priority,\n      status: false\n    }]);\n  }\n\n  function submitList() {\n    setLists([...lists, {\n      tasks: tasks,\n      name: listName\n    }]);\n    setTasks([]);\n    setModalState(false); // close modal\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `newListModalContainer ${modalState ? \"\" : \"hidden\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"innerModal\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"list name\",\n        onChange: e => setListName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"add new list item\",\n        onChange: e => setTask(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        placeholder: \"add\",\n        onClick: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"browsers\",\n        onChange: e => setPriority(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"low\",\n          children: \"low\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          selected: \"selected\",\n          value: \"normal\",\n          children: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"high\",\n          children: \"high\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        placeholder: \"done\",\n        onClick: submitList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: tasks,\n        setTasks: setTasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewListModal, \"Sfa2nwcv1Dxfo7OOYtJH1eti1PI=\");\n\n_c = NewListModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewListModal\");","map":{"version":3,"sources":["D:/Libraries/Documents/CodeProjects/react-todo/my-app/src/components/NewListModal.js"],"names":["React","useState","useEffect","TaskList","NewListModal","lists","setLists","listName","setListName","modalState","setModalState","tasks","setTasks","task","setTask","priority","setPriority","addTask","name","id","Math","random","status","submitList","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport TaskList from \"./TaskList.js\";\r\n\r\nexport default function NewListModal({\r\n  lists,\r\n  setLists,\r\n  listName,\r\n  setListName,\r\n  modalState,\r\n  setModalState,\r\n}) {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [task, setTask] = useState(\"\"); //task name\r\n  const [priority, setPriority] = useState(\"normal\");\r\n\r\n  function addTask() {\r\n    setTasks([\r\n      ...tasks,\r\n      {\r\n        name: task,\r\n        id: Math.random(),\r\n        priority: priority,\r\n        status: false,\r\n      },\r\n    ]);\r\n  }\r\n\r\n  function submitList() {\r\n    setLists([...lists, { tasks: tasks, name: listName }]);\r\n    setTasks([]);\r\n    setModalState(false);\r\n    // close modal\r\n  }\r\n  return (\r\n    <div className={`newListModalContainer ${modalState ? \"\" : \"hidden\"}`}>\r\n      <div className=\"innerModal\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"list name\"\r\n          onChange={(e) => setListName(e.target.value)}\r\n        ></input>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"add new list item\"\r\n          onChange={(e) => setTask(e.target.value)}\r\n        ></input>\r\n\r\n        <input type=\"submit\" placeholder=\"add\" onClick={addTask}></input>\r\n        <select id=\"browsers\" onChange={(e) => setPriority(e.target.value)}>\r\n          <option value=\"low\">low</option>\r\n          <option selected=\"selected\" value=\"normal\">\r\n            normal\r\n          </option>\r\n          <option value=\"high\">high</option>\r\n        </select>\r\n        <input type=\"submit\" placeholder=\"done\" onClick={submitList}></input>\r\n        <TaskList tasks={tasks} setTasks={setTasks} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}