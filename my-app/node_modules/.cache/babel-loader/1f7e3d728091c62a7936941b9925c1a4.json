{"ast":null,"code":"var _jsxFileName = \"D:\\\\Libraries\\\\Documents\\\\CodeProjects\\\\react-todo\\\\my-app\\\\src\\\\components\\\\Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Weather() {\n  _s();\n\n  //use state to get input from form\n  const [city, setCity] = useState(\"Salisbury\");\n  const [temp, setTemp] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const api = {\n    key: \"26ce245088c3cd75b76abae32afa318b\",\n    base: \"https://api.openweathermap.org/data/2.5/\"\n  };\n  var controller = new AbortController();\n  var signal = controller.signal;\n  fetch(`${api.base}weather?q=${city}&appid=${api.key}`).then(response => response.json()).then(data => {\n    setCity(data[\"name\"]);\n    setTemp((data[\"main\"][\"temp\"] - 273.15) * (9 / 5) + 32);\n    setDesc(data[\"weather\"][0][\"description\"]);\n  }).catch(err => console.log(\"wrong city name\"));\n  controller.abort();\n\n  function displayWeather() {\n    fetch(`${api.base}weather?q=${city}&appid=${api.key}`).then(response => response.json()).then(data => {\n      setCity(data[\"name\"]);\n      setTemp((data[\"main\"][\"temp\"] - 273.15) * (9 / 5) + 32);\n      setDesc(data[\"weather\"][0][\"description\"]);\n    }).catch(err => console.log(\"wrong city name\"));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weatherContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weatherInputContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"enter a city\",\n        className: \"inputValue\",\n        value: city,\n        onChange: e => setCity(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"submit\",\n        onClick: displayWeather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weatherDisplayContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location\",\n        children: city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"temperature\",\n        children: temp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weatherDescription\",\n        children: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Weather, \"cb2N3/P7j1OgSlP9WdNs/qesldQ=\");\n\n_c = Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["D:/Libraries/Documents/CodeProjects/react-todo/my-app/src/components/Weather.js"],"names":["React","useState","Weather","city","setCity","temp","setTemp","desc","setDesc","api","key","base","controller","AbortController","signal","fetch","then","response","json","data","catch","err","console","log","abort","displayWeather","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function Weather() {\r\n  //use state to get input from form\r\n  const [city, setCity] = useState(\"Salisbury\");\r\n  const [temp, setTemp] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\");\r\n  const api = {\r\n    key: \"26ce245088c3cd75b76abae32afa318b\",\r\n    base: \"https://api.openweathermap.org/data/2.5/\",\r\n  };\r\n  var controller = new AbortController();\r\n  var signal = controller.signal;\r\n\r\n  fetch(`${api.base}weather?q=${city}&appid=${api.key}`)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      setCity(data[\"name\"]);\r\n      setTemp((data[\"main\"][\"temp\"] - 273.15) * (9 / 5) + 32);\r\n      setDesc(data[\"weather\"][0][\"description\"]);\r\n    })\r\n    .catch((err) => console.log(\"wrong city name\"));\r\n\r\n  controller.abort();\r\n\r\n  function displayWeather() {\r\n    fetch(`${api.base}weather?q=${city}&appid=${api.key}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setCity(data[\"name\"]);\r\n        setTemp((data[\"main\"][\"temp\"] - 273.15) * (9 / 5) + 32);\r\n        setDesc(data[\"weather\"][0][\"description\"]);\r\n      })\r\n      .catch((err) => console.log(\"wrong city name\"));\r\n  }\r\n\r\n  return (\r\n    <div className=\"weatherContainer\">\r\n      <div className=\"weatherInputContainer\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"enter a city\"\r\n          className=\"inputValue\"\r\n          value={city}\r\n          onChange={(e) => setCity(e.target.value)}\r\n        ></input>\r\n        <input type=\"submit\" value=\"submit\" onClick={displayWeather}></input>\r\n      </div>\r\n      <div className=\"weatherDisplayContainer\">\r\n        <div className=\"location\">{city}</div>\r\n        <div className=\"temperature\">{temp}</div>\r\n        <div className=\"weatherDescription\">{desc}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}