{"ast":null,"code":"var _jsxFileName = \"D:\\\\Libraries\\\\Documents\\\\CodeProjects\\\\react-todo\\\\my-app\\\\src\\\\components\\\\Input.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Input({\n  tasks,\n  setTasks,\n  lists,\n  currentList,\n  setLists\n}) {\n  _s();\n\n  const [taskName, setTaskName] = useState(\"\");\n  const [priority, setPriority] = useState(\"normal\");\n  const [status, setStatus] = useState(false); // useEffect(()=>{\n  //   setPriority()\n  // },[setPriority()]\n  // )\n\n  useEffect(() => {\n    let temp = lists.map(list => {\n      if (currentList === list.id) {\n        // change list goes here\n        console.log(tasks); //set list tasks to current tasks\n\n        list.tasks = tasks;\n        console.log(list.tasks); //currently does not save last delete\n        //need to add the save function when adding new iqtem to the list\n      }\n\n      setLists(temp);\n      return list;\n    });\n  }, [tasks]);\n\n  function addTask() {\n    console.log(tasks);\n    setTasks(prevTasks => [...prevTasks, {\n      name: taskName,\n      id: Math.random(),\n      priority: priority,\n      status: status\n    }]);\n    setTaskName(\"\"); //setPriority(\"normal\");\n\n    console.log(tasks);\n    console.log(Array.isArray(tasks));\n  }\n\n  function enter(e) {\n    if (e.key === \"Enter\") {\n      addTask();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inputContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: taskName,\n      placeholder: \"add task\",\n      onChange: e => setTaskName(e.target.value),\n      onKeyDown: e => enter(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"addButton\",\n      onClick: addTask,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"browsers\",\n      onChange: e => setPriority(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"low\",\n        children: \"low\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        selected: \"selected\",\n        value: \"normal\",\n        children: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"high\",\n        children: \"high\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Input, \"eHBGxrt2+eqnKgbVPFJYoLvkAug=\");\n\n_c = Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["D:/Libraries/Documents/CodeProjects/react-todo/my-app/src/components/Input.js"],"names":["React","useState","useEffect","Input","tasks","setTasks","lists","currentList","setLists","taskName","setTaskName","priority","setPriority","status","setStatus","temp","map","list","id","console","log","addTask","prevTasks","name","Math","random","Array","isArray","enter","e","key","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nexport default function Input({\r\n  tasks,\r\n  setTasks,\r\n  lists,\r\n  currentList,\r\n  setLists,\r\n}) {\r\n  const [taskName, setTaskName] = useState(\"\");\r\n  const [priority, setPriority] = useState(\"normal\");\r\n  const [status, setStatus] = useState(false);\r\n\r\n  // useEffect(()=>{\r\n  //   setPriority()\r\n\r\n  // },[setPriority()]\r\n  // )\r\n  useEffect(() => {\r\n    let temp = lists.map((list) => {\r\n      if (currentList === list.id) {\r\n        // change list goes here\r\n        console.log(tasks);\r\n        //set list tasks to current tasks\r\n        list.tasks = tasks;\r\n        console.log(list.tasks);\r\n        //currently does not save last delete\r\n        //need to add the save function when adding new iqtem to the list\r\n      }\r\n      setLists(temp);\r\n      return list;\r\n    });\r\n  }, [tasks]);\r\n\r\n  function addTask() {\r\n    console.log(tasks);\r\n\r\n    setTasks((prevTasks) => [\r\n      ...prevTasks,\r\n      {\r\n        name: taskName,\r\n        id: Math.random(),\r\n        priority: priority,\r\n        status: status,\r\n      },\r\n    ]);\r\n\r\n    setTaskName(\"\");\r\n    //setPriority(\"normal\");\r\n    console.log(tasks);\r\n    console.log(Array.isArray(tasks));\r\n  }\r\n  function enter(e) {\r\n    if (e.key === \"Enter\") {\r\n      addTask();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"inputContainer\">\r\n      <input\r\n        type=\"text\"\r\n        value={taskName}\r\n        placeholder=\"add task\"\r\n        onChange={(e) => setTaskName(e.target.value)}\r\n        onKeyDown={(e) => enter(e)}\r\n      ></input>\r\n      <button className=\"addButton\" onClick={addTask}>\r\n        Add\r\n      </button>\r\n\r\n      <select id=\"browsers\" onChange={(e) => setPriority(e.target.value)}>\r\n        <option value=\"low\">low</option>\r\n        <option selected=\"selected\" value=\"normal\">\r\n          normal\r\n        </option>\r\n        <option value=\"high\">high</option>\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}