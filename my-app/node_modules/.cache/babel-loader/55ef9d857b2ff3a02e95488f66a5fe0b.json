{"ast":null,"code":"var _jsxFileName = \"D:\\\\Libraries\\\\Documents\\\\CodeProjects\\\\react-todo\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Input from \"./components/Input\";\nimport TaskList from \"./components/TaskList\";\nimport Today from \"./components/Today\";\nimport SettingButtons from \"./components/SettingButtons\";\nimport Defaults from \"./components/Defaults\";\nimport Weather from \"./components/Weather\";\nimport NewListModal from \"./components/NewListModal.js\";\nimport Lists from \"./components/Lists.js\"; //\n\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  var localData;\n  var JSONData;\n  localData = localStorage.getItem(\"tasks\");\n\n  if (localData === undefined) {\n    console.log(\"yahoo\");\n    JSONData = [];\n  } else {\n    JSONData = JSON.parse(localData);\n  }\n\n  const [tasks, setTasks] = useState(JSONData);\n  const [today, setToday] = useState(\"\");\n  const [lists, setLists] = useState([]);\n  const [listName, setListName] = useState(\"\");\n  const [modalState, setModalState] = useState(false);\n  const [currentList, setList] = useState(\"\"); // list id\n  //console.log(Array.isArray(tasks));\n\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"appContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Today, {\n        today: today,\n        setToday: setToday\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Weather, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Lists, {\n        lists: lists,\n        setTasks: setTasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Defaults, {\n        tasks: tasks,\n        setTasks: setTasks,\n        today: today,\n        setToday: setToday,\n        modalState: modalState,\n        setModalState: setModalState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        tasks: tasks,\n        setTasks: setTasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SettingButtons, {\n        tasks: tasks,\n        setTasks: setTasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NewListModal, {\n        lists: lists,\n        setLists: setLists,\n        modalState: modalState,\n        setModalState: setModalState,\n        currentList: currentList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: tasks,\n        setTasks: setTasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"mfBY71AiisxNns7kl4APr7exXSI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Libraries/Documents/CodeProjects/react-todo/my-app/src/App.js"],"names":["React","useState","useEffect","Input","TaskList","Today","SettingButtons","Defaults","Weather","NewListModal","Lists","App","localData","JSONData","localStorage","getItem","undefined","console","log","JSON","parse","tasks","setTasks","today","setToday","lists","setLists","listName","setListName","modalState","setModalState","currentList","setList","setItem","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,KAAP,MAAkB,uBAAlB,C,CACA;;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,MAAIC,SAAJ;AACA,MAAIC,QAAJ;AAEAD,EAAAA,SAAS,GAAGE,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;;AACA,MAAIH,SAAS,KAAKI,SAAlB,EAA6B;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAL,IAAAA,QAAQ,GAAG,EAAX;AACD,GAHD,MAGO;AACLA,IAAAA,QAAQ,GAAGM,IAAI,CAACC,KAAL,CAAWR,SAAX,CAAX;AACD;;AAED,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAACY,QAAD,CAAlC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBvB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACwB,KAAD,EAAQC,QAAR,IAAoBzB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC0B,QAAD,EAAWC,WAAX,IAA0B3B,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC4B,UAAD,EAAaC,aAAb,IAA8B7B,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAAC8B,WAAD,EAAcC,OAAd,IAAyB/B,QAAQ,CAAC,EAAD,CAAvC,CAjBa,CAiBgC;AAC7C;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,YAAY,CAACmB,OAAb,CAAqB,OAArB,EAA8Bd,IAAI,CAACe,SAAL,CAAeb,KAAf,CAA9B;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAEE,KAAd;AAAqB,QAAA,QAAQ,EAAEC;AAA/B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAEC,KAAd;AAAqB,QAAA,QAAQ,EAAEH;AAA/B;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,QAAD;AACE,QAAA,KAAK,EAAED,KADT;AAEE,QAAA,QAAQ,EAAEC,QAFZ;AAGE,QAAA,KAAK,EAAEC,KAHT;AAIE,QAAA,QAAQ,EAAEC,QAJZ;AAKE,QAAA,UAAU,EAAEK,UALd;AAME,QAAA,aAAa,EAAEC;AANjB;AAAA;AAAA;AAAA;AAAA,cAJF,eAaE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAET,KAAd;AAAqB,QAAA,QAAQ,EAAEC;AAA/B;AAAA;AAAA;AAAA;AAAA,cAbF,eAcE,QAAC,cAAD;AAAgB,QAAA,KAAK,EAAED,KAAvB;AAA8B,QAAA,QAAQ,EAAEC;AAAxC;AAAA;AAAA;AAAA;AAAA,cAdF,eAeE,QAAC,YAAD;AACE,QAAA,KAAK,EAAEG,KADT;AAEE,QAAA,QAAQ,EAAEC,QAFZ;AAGE,QAAA,UAAU,EAAEG,UAHd;AAIE,QAAA,aAAa,EAAEC,aAJjB;AAKE,QAAA,WAAW,EAAEC;AALf;AAAA;AAAA;AAAA;AAAA,cAfF,eAuBE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEV,KAAjB;AAAwB,QAAA,QAAQ,EAAEC;AAAlC;AAAA;AAAA;AAAA;AAAA,cAvBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;GArDQX,G;;KAAAA,G;AAuDT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Input from \"./components/Input\";\r\nimport TaskList from \"./components/TaskList\";\r\nimport Today from \"./components/Today\";\r\nimport SettingButtons from \"./components/SettingButtons\";\r\nimport Defaults from \"./components/Defaults\";\r\nimport Weather from \"./components/Weather\";\r\nimport NewListModal from \"./components/NewListModal.js\";\r\nimport Lists from \"./components/Lists.js\";\r\n//\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  var localData;\r\n  var JSONData;\r\n\r\n  localData = localStorage.getItem(\"tasks\");\r\n  if (localData === undefined) {\r\n    console.log(\"yahoo\");\r\n    JSONData = [];\r\n  } else {\r\n    JSONData = JSON.parse(localData);\r\n  }\r\n\r\n  const [tasks, setTasks] = useState(JSONData);\r\n  const [today, setToday] = useState(\"\");\r\n  const [lists, setLists] = useState([]);\r\n  const [listName, setListName] = useState(\"\");\r\n  const [modalState, setModalState] = useState(false);\r\n  const [currentList, setList] = useState(\"\"); // list id\r\n  //console.log(Array.isArray(tasks));\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"appContainer\">\r\n        <Today today={today} setToday={setToday} />\r\n        <Weather />\r\n        <Lists lists={lists} setTasks={setTasks} />\r\n        <Defaults\r\n          tasks={tasks}\r\n          setTasks={setTasks}\r\n          today={today}\r\n          setToday={setToday}\r\n          modalState={modalState}\r\n          setModalState={setModalState}\r\n        />\r\n\r\n        <Input tasks={tasks} setTasks={setTasks} />\r\n        <SettingButtons tasks={tasks} setTasks={setTasks} />\r\n        <NewListModal\r\n          lists={lists}\r\n          setLists={setLists}\r\n          modalState={modalState}\r\n          setModalState={setModalState}\r\n          currentList={currentList}\r\n        />\r\n\r\n        <TaskList tasks={tasks} setTasks={setTasks} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}