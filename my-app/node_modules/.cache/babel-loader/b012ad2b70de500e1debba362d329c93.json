{"ast":null,"code":"var _jsxFileName = \"D:\\\\Libraries\\\\Documents\\\\CodeProjects\\\\react-todo\\\\my-app\\\\src\\\\components\\\\Task.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Task({\n  task,\n  name,\n  id,\n  tasks,\n  setTasks,\n  priority,\n  status,\n  setStatus,\n  lists,\n  setLists,\n  currentList,\n  setCurrentList\n}) {\n  _s();\n\n  useEffect(() => {\n    if (lists != null) {\n      setLists(lists.map(list => {\n        if (currentList === list.id) {\n          // change list goes here\n          console.log(tasks); //set list tasks to current tasks\n\n          list.tasks = tasks;\n          console.log(list.tasks); //currently does not save last delete\n          //need to add the save function when adding new iqtem to the list\n        }\n\n        return list;\n      }));\n    }\n  }, [tasks, currentList]);\n\n  async function deleteTask() {\n    //use async ane await to get set tasks to run first\n    console.log(currentList);\n    await setTasks(tasks => tasks.filter(ev => ev.id !== task.id)); //wrap all the temp code in setLiist\n    // console.log(tasks);\n    //console.log(lists);\n    //console.log(temp);\n    //setLists(temp);\n  }\n\n  function completeTask() {\n    setTasks(tasks.map(item => {\n      if (item.id === task.id) {\n        return { ...item,\n          status: !item.status\n        };\n      }\n\n      return item;\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"taskContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskButtonContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"taskDone\",\n        value: id,\n        onClick: deleteTask,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"complete\",\n        value: id,\n        onClick: completeTask,\n        children: \"O\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `taskDescription ${task.status ? \"completed\" : \"\"}`,\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `priority \n        ${task.priority === \"low\" ? \"low\" : \"\"} \n        ${task.priority === \"normal\" ? \"normal\" : \"\"}\n        ${task.priority === \"high\" ? \"high\" : \"\"}\n        `,\n      children: priority\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Task, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["D:/Libraries/Documents/CodeProjects/react-todo/my-app/src/components/Task.js"],"names":["React","useState","useEffect","Task","task","name","id","tasks","setTasks","priority","status","setStatus","lists","setLists","currentList","setCurrentList","map","list","console","log","deleteTask","filter","ev","completeTask","item"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nexport default function Task({\r\n  task,\r\n  name,\r\n  id,\r\n  tasks,\r\n  setTasks,\r\n  priority,\r\n  status,\r\n  setStatus,\r\n  lists,\r\n  setLists,\r\n  currentList,\r\n  setCurrentList,\r\n}) {\r\n  useEffect(() => {\r\n    if (lists != null) {\r\n      setLists(\r\n        lists.map((list) => {\r\n          if (currentList === list.id) {\r\n            // change list goes here\r\n            console.log(tasks);\r\n            //set list tasks to current tasks\r\n            list.tasks = tasks;\r\n            console.log(list.tasks);\r\n            //currently does not save last delete\r\n            //need to add the save function when adding new iqtem to the list\r\n          }\r\n          return list;\r\n        })\r\n      );\r\n    }\r\n  }, [tasks, currentList]);\r\n\r\n  async function deleteTask() {\r\n    //use async ane await to get set tasks to run first\r\n    console.log(currentList);\r\n    await setTasks((tasks) => tasks.filter((ev) => ev.id !== task.id));\r\n    //wrap all the temp code in setLiist\r\n\r\n    // console.log(tasks);\r\n    //console.log(lists);\r\n    //console.log(temp);\r\n    //setLists(temp);\r\n  }\r\n\r\n  function completeTask() {\r\n    setTasks(\r\n      tasks.map((item) => {\r\n        if (item.id === task.id) {\r\n          return { ...item, status: !item.status };\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"taskContainer\">\r\n      <div className=\"taskButtonContainer\">\r\n        <button className=\"taskDone\" value={id} onClick={deleteTask}>\r\n          X\r\n        </button>\r\n        <button className=\"complete\" value={id} onClick={completeTask}>\r\n          O\r\n        </button>\r\n      </div>\r\n\r\n      <div className={`taskDescription ${task.status ? \"completed\" : \"\"}`}>\r\n        {name}\r\n      </div>\r\n      <div\r\n        className={`priority \r\n        ${task.priority === \"low\" ? \"low\" : \"\"} \r\n        ${task.priority === \"normal\" ? \"normal\" : \"\"}\r\n        ${task.priority === \"high\" ? \"high\" : \"\"}\r\n        `}\r\n      >\r\n        {priority}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}