[{"D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\index.js":"1","D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\reportWebVitals.js":"2","D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\App.js":"3","D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\components\\Today.js":"4","D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\components\\TaskList.js":"5","D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\components\\Defaults.js":"6","D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\components\\SettingButtons.js":"7","D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\components\\Input.js":"8","D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\components\\Weather.js":"9","D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\components\\Task.js":"10","D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\components\\defaultTasks\\Default1.js":"11"},{"size":479,"mtime":1616402208584,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":1365,"mtime":1617658720177,"results":"15","hashOfConfig":"13"},{"size":400,"mtime":1617131491089,"results":"16","hashOfConfig":"13"},{"size":495,"mtime":1616537564470,"results":"17","hashOfConfig":"13"},{"size":1067,"mtime":1616583855116,"results":"18","hashOfConfig":"13"},{"size":1678,"mtime":1616787040691,"results":"19","hashOfConfig":"13"},{"size":1418,"mtime":1617661335721,"results":"20","hashOfConfig":"13"},{"size":1928,"mtime":1617658818943,"results":"21","hashOfConfig":"13"},{"size":1189,"mtime":1616587455802,"results":"22","hashOfConfig":"13"},{"size":2003,"mtime":1616585586976,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"axoddt",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\index.js",[],["51","52"],"D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\reportWebVitals.js",[],"D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\App.js",["53"],"D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\components\\Today.js",["54"],"import React, { useState } from \"react\";\r\n\r\nexport default function Today({ today, setToday }) {\r\n  let currentDate = new Date();\r\n  let y = currentDate.getFullYear();\r\n  let m = currentDate.getMonth() + 1;\r\n  let d = currentDate.getDate();\r\n\r\n  setToday(`${m}/${d}/${y}`);\r\n\r\n  return (\r\n    <div className=\"dateContainer\">\r\n      <h1 className=\"today\">To Do List {today}</h1>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\components\\TaskList.js",[],"D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\components\\Defaults.js",["55"],"import React, { useState } from \"react\";\r\nimport { default1 } from \"./defaultTasks/Default1\";\r\n\r\nexport default function Defaults({ tasks, setTasks, today, setToday }) {\r\n  function handleDefault(e) {\r\n    setDate();\r\n    if (e.target.value === \"1\") {\r\n      setDefault1();\r\n    }\r\n  }\r\n  //not sure if i need this set date method.  but i want it to recheck the date everytime\r\n  //i click a efault because it would be a new day if i did not close the app\r\n  //its most likely that i dont need to set date here beacuse it does not overwrite the date from Today.js\r\n  function setDate() {\r\n    let currentDate = new Date();\r\n    let y = currentDate.getFullYear();\r\n    let m = currentDate.getMonth();\r\n    let d = currentDate.getDate();\r\n    setToday(`${m}/${d}/${y}`);\r\n  }\r\n\r\n  function setDefault1() {\r\n    setTasks(default1);\r\n  }\r\n  return (\r\n    <div className=\"defaultsContainer\">\r\n      <button\r\n        className=\"default1Button\"\r\n        value=\"1\"\r\n        onClick={(e) => handleDefault(e)}\r\n      >\r\n        Default 1\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\components\\SettingButtons.js",["56"],"import React, { useState } from \"react\";\r\n\r\nexport default function SettingButtons({ tasks, setTasks }) {\r\n  function prioritySort() {\r\n    let low = [];\r\n    let normal = [];\r\n    let high = [];\r\n\r\n    tasks.forEach(function (task) {\r\n      if (task.priority === \"low\") {\r\n        low.push(task);\r\n      } else if (task.priority === \"normal\") {\r\n        normal.push(task);\r\n      } else if (task.priority === \"high\") {\r\n        high.push(task);\r\n      }\r\n    });\r\n\r\n    setTasks([...high, ...normal, ...low]);\r\n  }\r\n\r\n  function completionSort() {\r\n    let complete = [];\r\n    let incomplete = [];\r\n\r\n    tasks.forEach(function (task) {\r\n      if (task.status === true) {\r\n        complete.push(task);\r\n      } else {\r\n        incomplete.push(task);\r\n      }\r\n    });\r\n\r\n    setTasks([...incomplete, ...complete]);\r\n  }\r\n  function deleteCompleted() {\r\n    let complete = [];\r\n    let incomplete = [];\r\n\r\n    tasks.forEach(function (task) {\r\n      if (task.status === true) {\r\n        complete.push(task);\r\n      } else {\r\n        incomplete.push(task);\r\n      }\r\n    });\r\n\r\n    setTasks([...incomplete]);\r\n  }\r\n  function clear() {\r\n    setTasks([]);\r\n  }\r\n\r\n  return (\r\n    <div className=\"sortingButtonsContainer\">\r\n      <button className=\"prioritySortButton\" onClick={prioritySort}>\r\n        Sort By Priority\r\n      </button>\r\n      <button className=\"prioritySortButton\" onClick={completionSort}>\r\n        Sort By Completion\r\n      </button>\r\n      <button className=\"deleteCompletedButton\" onClick={deleteCompleted}>\r\n        Delete Completed\r\n      </button>\r\n      <button className=\"clearButton\" onClick={clear}>\r\n        Clear\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\components\\Input.js",["57","58"],"D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\components\\Weather.js",[],"D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\components\\Task.js",["59"],"import React, { useState } from \"react\";\r\n\r\nexport default function Task({\r\n  task,\r\n  name,\r\n  id,\r\n  tasks,\r\n  setTasks,\r\n  priority,\r\n  status,\r\n  setStatus,\r\n}) {\r\n  function deleteTask() {\r\n    setTasks((tasks) => tasks.filter((ev) => ev.id !== task.id));\r\n  }\r\n\r\n  function completeTask() {\r\n    setTasks(\r\n      tasks.map((item) => {\r\n        if (item.id === task.id) {\r\n          return { ...item, status: !item.status };\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"taskContainer\">\r\n      <div className=\"taskButtonContainer\">\r\n        <button className=\"taskDone\" value={id} onClick={deleteTask}>\r\n          X\r\n        </button>\r\n        <button className=\"complete\" value={id} onClick={completeTask}>\r\n          O\r\n        </button>\r\n      </div>\r\n\r\n      <div className={`taskDescription ${task.status ? \"completed\" : \"\"}`}>\r\n        {name}\r\n      </div>\r\n      <div\r\n        className={`priority \r\n        ${task.priority === \"low\" ? \"low\" : \"\"} \r\n        ${task.priority === \"normal\" ? \"normal\" : \"\"}\r\n        ${task.priority === \"high\" ? \"high\" : \"\"}\r\n        `}\r\n      >\r\n        {priority}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\components\\defaultTasks\\Default1.js",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":1,"column":38,"nodeType":"66","messageId":"67","endLine":1,"endColumn":48},{"ruleId":"64","severity":1,"message":"68","line":1,"column":17,"nodeType":"66","messageId":"67","endLine":1,"endColumn":25},{"ruleId":"64","severity":1,"message":"68","line":1,"column":17,"nodeType":"66","messageId":"67","endLine":1,"endColumn":25},{"ruleId":"64","severity":1,"message":"68","line":1,"column":17,"nodeType":"66","messageId":"67","endLine":1,"endColumn":25},{"ruleId":"64","severity":1,"message":"69","line":1,"column":27,"nodeType":"66","messageId":"67","endLine":1,"endColumn":36},{"ruleId":"64","severity":1,"message":"70","line":6,"column":18,"nodeType":"66","messageId":"67","endLine":6,"endColumn":27},{"ruleId":"64","severity":1,"message":"68","line":1,"column":17,"nodeType":"66","messageId":"67","endLine":1,"endColumn":25},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'useReducer' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'setStatus' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]