[{"D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\index.js":"1","D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\reportWebVitals.js":"2","D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\App.js":"3","D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\components\\Today.js":"4","D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\components\\TaskList.js":"5","D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\components\\Defaults.js":"6","D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\components\\SettingButtons.js":"7","D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\components\\Input.js":"8","D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\components\\Weather.js":"9","D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\components\\Task.js":"10","D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\components\\defaultTasks\\Default1.js":"11","D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\components\\NewListModal.js":"12","D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\components\\Lists.js":"13","D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\components\\List.js":"14"},{"size":479,"mtime":1616402208584,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":2417,"mtime":1620941008689,"results":"18","hashOfConfig":"16"},{"size":400,"mtime":1617131491089,"results":"19","hashOfConfig":"16"},{"size":697,"mtime":1619308935771,"results":"20","hashOfConfig":"16"},{"size":1266,"mtime":1619308932791,"results":"21","hashOfConfig":"16"},{"size":1678,"mtime":1616787040691,"results":"22","hashOfConfig":"16"},{"size":2007,"mtime":1621022938304,"results":"23","hashOfConfig":"16"},{"size":1928,"mtime":1617658818943,"results":"24","hashOfConfig":"16"},{"size":2038,"mtime":1621022939613,"results":"25","hashOfConfig":"16"},{"size":2003,"mtime":1616585586976,"results":"26","hashOfConfig":"16"},{"size":1953,"mtime":1619375818836,"results":"27","hashOfConfig":"16"},{"size":1106,"mtime":1620854117641,"results":"28","hashOfConfig":"16"},{"size":442,"mtime":1619315953752,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"axoddt",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"32"},"D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\index.js",[],["65","66"],"D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\reportWebVitals.js",[],"D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\App.js",["67","68"],"D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\components\\Today.js",["69"],"import React, { useState } from \"react\";\r\n\r\nexport default function Today({ today, setToday }) {\r\n  let currentDate = new Date();\r\n  let y = currentDate.getFullYear();\r\n  let m = currentDate.getMonth() + 1;\r\n  let d = currentDate.getDate();\r\n\r\n  setToday(`${m}/${d}/${y}`);\r\n\r\n  return (\r\n    <div className=\"dateContainer\">\r\n      <h1 className=\"today\">To Do List {today}</h1>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\components\\TaskList.js",[],"D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\components\\Defaults.js",["70"],"import React, { useState } from \"react\";\r\nimport { default1 } from \"./defaultTasks/Default1\";\r\n\r\nexport default function Defaults({\r\n  tasks,\r\n  setTasks,\r\n  today,\r\n  setToday,\r\n  modalState,\r\n  setModalState,\r\n}) {\r\n  function handleDefault(e) {\r\n    setDate();\r\n    if (e.target.value === \"1\") {\r\n      setDefault1();\r\n    }\r\n  }\r\n  function handleModal() {\r\n    setModalState(true);\r\n  }\r\n  //not sure if i need this set date method.  but i want it to recheck the date everytime\r\n  //i click a efault because it would be a new day if i did not close the app\r\n  //its most likely that i dont need to set date here beacuse it does not overwrite the date from Today.js\r\n  function setDate() {\r\n    let currentDate = new Date();\r\n    let y = currentDate.getFullYear();\r\n    let m = currentDate.getMonth();\r\n    let d = currentDate.getDate();\r\n    setToday(`${m}/${d}/${y}`);\r\n  }\r\n\r\n  function setDefault1() {\r\n    setTasks(default1);\r\n  }\r\n  return (\r\n    <div className=\"defaultsContainer\">\r\n      <button\r\n        className=\"default1Button\"\r\n        value=\"1\"\r\n        onClick={(e) => handleDefault(e)}\r\n      >\r\n        Default 1\r\n      </button>\r\n      <button className=\"\" onClick={handleModal}>\r\n        create new list\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\components\\SettingButtons.js",["71"],"import React, { useState } from \"react\";\r\n\r\nexport default function SettingButtons({ tasks, setTasks }) {\r\n  function prioritySort() {\r\n    let low = [];\r\n    let normal = [];\r\n    let high = [];\r\n\r\n    tasks.forEach(function (task) {\r\n      if (task.priority === \"low\") {\r\n        low.push(task);\r\n      } else if (task.priority === \"normal\") {\r\n        normal.push(task);\r\n      } else if (task.priority === \"high\") {\r\n        high.push(task);\r\n      }\r\n    });\r\n\r\n    setTasks([...high, ...normal, ...low]);\r\n  }\r\n\r\n  function completionSort() {\r\n    let complete = [];\r\n    let incomplete = [];\r\n\r\n    tasks.forEach(function (task) {\r\n      if (task.status === true) {\r\n        complete.push(task);\r\n      } else {\r\n        incomplete.push(task);\r\n      }\r\n    });\r\n\r\n    setTasks([...incomplete, ...complete]);\r\n  }\r\n  function deleteCompleted() {\r\n    let complete = [];\r\n    let incomplete = [];\r\n\r\n    tasks.forEach(function (task) {\r\n      if (task.status === true) {\r\n        complete.push(task);\r\n      } else {\r\n        incomplete.push(task);\r\n      }\r\n    });\r\n\r\n    setTasks([...incomplete]);\r\n  }\r\n  function clear() {\r\n    setTasks([]);\r\n  }\r\n\r\n  return (\r\n    <div className=\"sortingButtonsContainer\">\r\n      <button className=\"prioritySortButton\" onClick={prioritySort}>\r\n        Sort By Priority\r\n      </button>\r\n      <button className=\"prioritySortButton\" onClick={completionSort}>\r\n        Sort By Completion\r\n      </button>\r\n      <button className=\"deleteCompletedButton\" onClick={deleteCompleted}>\r\n        Delete Completed\r\n      </button>\r\n      <button className=\"clearButton\" onClick={clear}>\r\n        Clear\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\components\\Input.js",["72","73"],"D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\components\\Weather.js",[],"D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\components\\Task.js",["74","75"],"D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\components\\defaultTasks\\Default1.js",[],"D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\components\\NewListModal.js",["76","77"],"import React, { useState, useEffect } from \"react\";\r\nimport TaskList from \"./TaskList.js\";\r\n\r\nexport default function NewListModal({\r\n  lists,\r\n  setLists,\r\n  modalState,\r\n  setModalState,\r\n  setCurrentList,\r\n}) {\r\n  const [tasks1, setTasks1] = useState([]);\r\n  const [task, setTask] = useState(\"\"); //task name\r\n  const [priority, setPriority] = useState(\"normal\");\r\n  const [listName, setListName] = useState(\"\");\r\n\r\n  function addTask() {\r\n    setTasks1([\r\n      ...tasks1,\r\n      {\r\n        name: task,\r\n        id: Math.random(),\r\n        priority: priority,\r\n        status: false,\r\n      },\r\n    ]);\r\n  }\r\n\r\n  function submitList() {\r\n    //SET TO CURRENT LIST\r\n    //console.log(listName);\r\n    let newId = Math.random();\r\n    setLists([...lists, { tasks: tasks1, name: listName, id: Math.random() }]);\r\n    //console.log(lists);\r\n    setTasks1([]);\r\n    setModalState(false);\r\n\r\n    // console.log(tasks1);\r\n    // console.log(modalState);\r\n    // close modal\r\n    //sus order\r\n  }\r\n  return (\r\n    <div className={`newListModalContainer ${modalState ? \"\" : \"hidden\"}`}>\r\n      <div className=\"innerModal\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"list name\"\r\n          onChange={(e) => setListName(e.target.value)}\r\n        ></input>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"add new list item\"\r\n          onChange={(e) => setTask(e.target.value)}\r\n        ></input>\r\n\r\n        <input type=\"submit\" placeholder=\"add\" onClick={addTask}></input>\r\n        <select id=\"browsers\" onChange={(e) => setPriority(e.target.value)}>\r\n          <option value=\"low\">low</option>\r\n          <option selected=\"selected\" value=\"normal\">\r\n            normal\r\n          </option>\r\n          <option value=\"high\">high</option>\r\n        </select>\r\n        <input type=\"submit\" placeholder=\"done\" onClick={submitList}></input>\r\n        <TaskList tasks={tasks1} setTasks={setTasks1} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\components\\Lists.js",["78","79"],"import React, { useState } from \"react\";\r\nimport List from \"./List.js\";\r\n\r\nexport default function Lists({\r\n  //thhis is the list of lists\r\n  lists,\r\n  setTasks,\r\n  setCurrentList,\r\n  currentList,\r\n}) {\r\n  function changeList(e) {\r\n    setTasks(JSON.parse(e));\r\n  }\r\n  return (\r\n    <div className=\"listsContainer\">\r\n      {lists.map((list) => (\r\n        <List\r\n          list={list}\r\n          lists={lists}\r\n          setTasks={setTasks}\r\n          key={list.id}\r\n          setCurrentList={setCurrentList}\r\n          currentList={currentList}\r\n        />\r\n      ))}\r\n    </div>\r\n  ); // lists cant pass lists into list\r\n}\r\n//need to get the list.tasks into the change list function\r\n\r\n/* <List\r\n          lists={lists}\r\n          setTasks={setTasks}\r\n          tasks={list.tasks}\r\n          name={list.name}\r\n          key={list.id}\r\n        /> */\r\n/*<div className=\"listsContainer\">\r\n      {lists.map((list) => (\r\n        <div\r\n          onClick={(e) => changeList(e.target.data)}\r\n          data={JSON.stringify(list.tasks)}\r\n        >\r\n          {list.name}\r\n        </div>\r\n      ))}\r\n    </div> */\r\n","D:\\Libraries\\Documents\\CodeProjects\\react-todo\\my-app\\src\\components\\List.js",["80"],"import React, { useState } from \"react\";\r\n\r\nexport default function List({\r\n  list,\r\n  lists,\r\n  setTasks,\r\n  key,\r\n  setCurrentList,\r\n  currentList,\r\n}) {\r\n  function changeList() {\r\n    console.log(key);\r\n    setTasks(list.tasks);\r\n    setCurrentList(list.id);\r\n    //console.log(currentList);\r\n  }\r\n\r\n  return (\r\n    <div onClick={changeList}>\r\n      <div>{list.name}</div>\r\n    </div>\r\n  );\r\n}\r\n//list, lists, setTasks, tasks, name, key\r\n",{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":28,"column":10,"nodeType":"87","messageId":"88","endLine":28,"endColumn":18},{"ruleId":"85","severity":1,"message":"89","line":28,"column":20,"nodeType":"87","messageId":"88","endLine":28,"endColumn":31},{"ruleId":"85","severity":1,"message":"90","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":25},{"ruleId":"85","severity":1,"message":"90","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":25},{"ruleId":"85","severity":1,"message":"90","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":25},{"ruleId":"85","severity":1,"message":"91","line":12,"column":18,"nodeType":"87","messageId":"88","endLine":12,"endColumn":27},{"ruleId":"92","severity":1,"message":"93","line":37,"column":6,"nodeType":"94","endLine":37,"endColumn":13,"suggestions":"95"},{"ruleId":"85","severity":1,"message":"90","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":25},{"ruleId":"92","severity":1,"message":"93","line":34,"column":6,"nodeType":"94","endLine":34,"endColumn":13,"suggestions":"96"},{"ruleId":"85","severity":1,"message":"97","line":1,"column":27,"nodeType":"87","messageId":"88","endLine":1,"endColumn":36},{"ruleId":"85","severity":1,"message":"98","line":31,"column":9,"nodeType":"87","messageId":"88","endLine":31,"endColumn":14},{"ruleId":"85","severity":1,"message":"90","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":25},{"ruleId":"85","severity":1,"message":"99","line":11,"column":12,"nodeType":"87","messageId":"88","endLine":11,"endColumn":22},{"ruleId":"85","severity":1,"message":"90","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":25},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'listName' is assigned a value but never used.","Identifier","unusedVar","'setListName' is assigned a value but never used.","'useState' is defined but never used.","'setStatus' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentList', 'lists', and 'setLists'. Either include them or remove the dependency array. If 'setLists' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["102"],["103"],"'useEffect' is defined but never used.","'newId' is assigned a value but never used.","'changeList' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},{"desc":"104","fix":"106"},"Update the dependencies array to be: [currentList, lists, setLists, tasks]",{"range":"107","text":"108"},{"range":"109","text":"108"},[917,924],"[currentList, lists, setLists, tasks]",[768,775]]